ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom")
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
# mit "fig.width = 10, fig.height = 13" erreichen wir, dass das Bild richtig angezeigt wird und nicht zu klein ist
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
# mit "fig.width = 10, fig.height = 13" erreichen wir, dass das Bild richtig angezeigt wird und nicht zu klein ist
country <- data %>%
group_by(country, continent) %>%
summarize(n = n(),
suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000) %>%
arrange(desc(suicide_per_100k))
country$country <- factor(country$country,
ordered = T,
levels = rev(country$country))
ggplot(country, aes(x = country, y = suicide_per_100k, fill = continent)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 0.6) +
labs(title = "Global suicides per 100k, by Country",
x = "Country",
y = "Suicides per 100k",
fill = "Continent") +
coord_flip() + #Achsen drehen, weil sont Land nicht zu lesen ist
scale_y_continuous(breaks = seq(0, 45, 2)) +
scale_x_discrete("Country", labels =  , position = "bottom") +
theme(legend.position = "bottom")
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalte HDI for year
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklÃ¤ren
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
glimpse(data)
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
knitr::kable(data)
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalte HDI for year
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklÃ¤ren
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
glimpse(data)
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalte HDI for year
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklÃ¤ren
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
summary(data)
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalte HDI for year
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklÃ¤ren
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
head(data)
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalte HDI for year
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklÃ¤ren
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
glimpse(data)
library(tidyverse)
library(countrycode)   # um Kontinente zu erzeugen
library(grid)
library(lattice)
# Laden der Daten
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalte HDI for year
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklÃ¤ren
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
glimpse(data)
