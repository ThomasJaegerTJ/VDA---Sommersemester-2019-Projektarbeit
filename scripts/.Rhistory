glimpse(master)
str(master)
head(master)
View(master)
View(master)
View(master)
View(master)
# Tidy data
# HDI for year (zu viele fehlende Werte), suicides/100k pop (falsche Werte?!)
master <- master %>%
select(-c('HDI for year','suicides/100k pop')) %>%
# Tidy data
# HDI for year (zu viele fehlende Werte), suicides/100k pop (falsche Werte?!)
master <- master %>%
select(-c(`HDI for year`,`suicides/100k pop`)) %>%
# Tidy data
# HDI for year (zu viele fehlende Werte), suicides/100k pop (falsche Werte?!)
master <- master %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
# Tidy data
# HDI for year (zu viele fehlende Werte), suicides/100k pop (falsche Werte?!)
master %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
library(tidyverse)
## data cleaning
sum(master$V7)
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
# sum HDI for year is NA
sum(data$`HDI for year`)
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
# sum HDI for year is NA
sum(data$`HDI for year`)
data <- data %>%
select(-c("HDI for year")) %>%
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
# sum HDI for year is NA
sum(data$`HDI for year`)
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
# sum HDI for year is NA
sum(data$`HDI for year`)
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country-year)
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
str(data)
head(data)
# checking for missing values
sapply(data, function(x) mean(is.na(data)))
# checking for missing values
sapply(df, function(x) mean(is.na(df)))
library(tidyverse)
# load data
data <- read_csv("../data/master.csv")
library(tidyverse)
library(countrycode)
library(tidyverse)
install.packages('countrycode')
# load data
data <- read_csv("../data/master.csv")
library(tidyverse)
install.packages('countrycode')
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
library(tidyverse)
install.packages('countrycode')
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
data <- data %>%
select(-c(`HDI for year`,`sucides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
install.packages("countrycode")
library(tidyverse)
install.packages('countrycode')
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
data <- data %>%
select(-c(`HDI for year`,`suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# view the finalized data
glimpse(data)
library(tidyverse)
install.packages('countrycode')
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
glimpse(data)
install.packages("countrycode")
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
glimpse(data)
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
data <- data %>%
filter(year != 2016) %>% # I therefore exclude 2016 data
select(-country_year)
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
data$age <- gsub(" years", "", data$age)
data$sex <- ifelse(data$sex == "male", "Male", "Female")
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
data_nominal <- c('country', 'sex', 'continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# Making age ordinal
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# Making generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)
# the global rate over the time period will be useful:
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# view the finalized data
glimpse(data)
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
glimpse(data)
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(row = n(),
years = rows / 12) %>%
arrange(years)
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- llapply(data[data_nominal], function(x){faktor(x)})
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){faktor(x)})
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklären
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
glimse(data)
library(tidyverse)
library(countrycode)
# load data
data <- read_csv("../data/master.csv")
# data cleaning
# entfernen der Spalten HDI for year und suicides/100k pop
# umbennen der anderern Spalten
data <- data %>%
select(-c(`HDI for year`, `suicides/100k pop`)) %>%
rename(gdp_for_year = `gdp_for_year ($)`,
gdp_per_capita = `gdp_per_capita ($)`,
country_year = `country-year`) %>%
as.data.frame()
# das Jahr 2016 aus data werfen
data <- data %>%
filter(year != 2016) %>%
select(-country_year)
# Jahre mit <= 3 Jahren von Daten rauswerfen
minimum_years <- data %>%
group_by(country) %>%
summarize(rows = n(),
years = rows / 12) %>%
arrange(years)
data <- data %>%
filter(!(country %in% head(minimum_years$country, 7)))
# das datenset ein wenig kleiner machen
data$age <- gsub(" years", "", data$age)        # gsub um Strings zu replacen
data$sex <- ifelse(data$sex == "male", "Male", "Female")
# continent data
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# nominale daten (country, sex, continent)
data_nominal <- c('country','sex','continent')
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})
# ordinale daten (alter, generation)
data$age <- factor(data$age,
ordered = T,
levels = c("5-14",
"15-24",
"25-34",
"35-54",
"55-74",
"75+"))
# generation ordinal
data$generation <- factor(data$generation,
ordered = T,
levels = c("G.I. Generation",
"Silent",
"Boomers",
"Generation X",
"Millenials",
"Generation Z"))
data <- as_tibble(data)  # TO-DO as_tibble erklären
# global average
global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) * 100000
# die finalen daten anschauen
glimpse(data)
### Globale Analyse
data %>%
group_by(year) %>%
summarize(population = sum(population),
suicides = sum(suicides_no),
suicides_per_100k = (suicides / population) * 100000) %>%
ggplot(aes(x = year, y = suicides_per_100k)) +
geom_line(col = "deepskyblue3", size = 1) +
geom_point(col = "deepskyblue3", size = 2) +
geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 1) +
labs(title = "Global Suicides (per 100k)",
subtitle = "Trend over time, 1985 - 2015.",
x = "Year",
y = "Suicides per 100k") +
scale_x_continuous(breaks = seq(1985, 2015, 2)) +
scale_y_continuous(breaks = seq(10, 20))
